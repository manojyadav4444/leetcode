class Solution {
    public int mincostTickets(int[] days, int[] costs) {
        int a[] = new int[365+1];
        for(int i=0;i<days.length;i++){
            a[days[i]] = 1;
        }
        for(int i=1;i<21;i++) System.out.print(a[i]);
        System.out.println();
        int []dp = new int[366];
        Arrays.fill(dp,-1);
        int ans = recur(a,costs,365,dp);
        for(int i=1;i<21;i++) System.out.print(dp[i]);
        return ans;
    }
    public int recur(int []a,int []costs,int i,int []dp){
        if(i<=0) return 0;
        if(dp[i]!=-1) return dp[i];
        if(a[i]==0){
            return dp[i]=recur(a,costs,i-1,dp);
        }
        return dp[i]=Math.min(Math.min(costs[2]+recur(a,costs,i-30,dp), costs[1]+recur(a,costs,i-7,dp)),costs[0]+recur(a,costs,i-1,dp));
    }
}
