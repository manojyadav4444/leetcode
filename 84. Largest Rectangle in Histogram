class Solution {
    public int largestRectangleArea(int[] a) {
        if(a.length==0) return 0;
        Stack<Integer> s = new Stack<Integer>();
        int l[] = new int[a.length];
        for(int i=0;i<a.length;i++){
            if(s.empty()){
                l[i]=-1;
                s.push(i);
            }
            else{
                while(!s.empty() && a[s.peek()]>=a[i]){
                    s.pop();
                }
                if(s.empty()){
                    l[i]=-1;
                    s.push(i);
                }
                else{
                    l[i]=s.peek();
                    s.push(i);
                }
            }
        }
        
        
        
        s.clear();
        int r[] = new int[a.length];
        for(int i=a.length-1;i>=0;i--){
            if(s.empty()){
                r[i]=a.length;
                s.push(i);
            }
            else{
                while(!s.empty() && a[s.peek()]>=a[i]){
                    s.pop();
                }
                if(s.empty()){
                    r[i]=a.length;
                    s.push(i);
                }
                else{
                    r[i]=s.peek();
                    s.push(i);
                }
            }
        }
        for(int i:a)    System.out.print(i);
        System.out.println();
        for(int i:l)    System.out.print(i);
        System.out.println();
        for(int i:r)    System.out.print(i);
        
        int maximum = Integer.MIN_VALUE;
        for(int i=0;i<a.length;i++){
            int temp = a[i]*(r[i]-l[i]-1);
            maximum = Math.max(maximum, temp);
        }
        return maximum;
    }
}
