class Solution {
    public int lengthOfLIS(int[] a) {
        Set<Integer> set = new HashSet<Integer>();
        for(int i : a){
            set.add(i);
        }
        int b[] = new int[set.size()];
        int index = 0;
        for(int i : set){
            b[index] = i;
            index++;
        }
        Arrays.sort(b);
        int n = a.length;
        int m = b.length;
        int dp[][] = new int[n+1][m+1];
        for(int []temp : dp){
            Arrays.fill(temp,-1);
        }
        return recur(a,b,n,m,dp);
    }
    public int recur(int []a, int []b, int n, int m, int [][]dp){
	    if(n==0 || m==0) return 0;
	    if(dp[n][m]!=-1) return dp[n][m];
	    if(a[n-1]==b[m-1]){
	        return dp[n][m]=1+recur(a,b,n-1,m-1,dp);
	    }
	    else{
	        return dp[n][m]=Math.max(recur(a,b,n-1,m,dp), recur(a,b,n,m-1,dp));
	    }
	}
}
