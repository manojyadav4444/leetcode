/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    public Node flatten(Node head) {
        if(head==null) return head;
        Node cur = head;
        Stack<Node> s = new Stack<Node>();
        while(cur!=null){
            if(cur.child!=null){
                if(cur.next!=null){
                    s.push(cur.next);
                }
                cur.next = cur.child;
                cur.next.prev = cur;
                cur.child = null;
            }
            else if(cur.next == null && !s.empty()){
                cur.next = s.pop();
                cur.next.prev = cur;
            }
            cur = cur.next;
            
        }
        return head;
    }
}
