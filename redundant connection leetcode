class Solution {
    public int[] findRedundantConnection(int[][] input) {
        int n = input.length;
        int m = input[0].length;
        ArrayList<Integer>[] a = new ArrayList[n+1]; 
        for (int i = 0; i < n+1; i++) { 
            a[i] = new ArrayList<Integer>(); 
        } 
        int ans[] = new int[2];
        for(int i=0;i<n;i++){
            int x = input[i][0];
            int y = input[i][1];
            if(dfs(x,y,0,a)){
                ans[0] = x;
                ans[1] = y;
            }
            else{
                a[x].add(y);
                a[y].add(x);
            }
        }
        return ans;
    }
    public boolean dfs(int i, int j,int parent, ArrayList<Integer>[] a){
        for(int x : a[i]){
            if(x==parent) continue;
            if(x==j) return true;
            if(dfs(x,j,i,a)) return true;
        }
        return false;
    }
    
    
    
    
    
    
    
}
