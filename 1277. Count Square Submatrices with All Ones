class Solution {
    public int countSquares(int[][] a) {
        int r = a.length;
        int c = a[0].length;
        int dp[][] = new int[r][c];
        for(int temp[]:dp){
            Arrays.fill(temp,Integer.MIN_VALUE);
        }
        for(int i=r-1;i>=0;i--){
            for(int j=c-1;j>=0;j--){
                int garbage = recur(a,i,j,dp);
            }
        }
        
        int ans = 0;
        for(int temp[] :dp){
            for(int i:temp){
                ans+=Math.max(i,0);
            }
        }        
        return ans;
    }
    
    public int recur(int [][]a, int r,int c, int [][]dp){
        if(r<0 || r>=a.length) return 0;
        if(c<0 || c>=a[0].length) return 0;
        if(r==0) return dp[r][c]=a[r][c];
        if(c==0) return dp[r][c]=a[r][c];
        if(a[r][c]==0) return 0;
        if(dp[r][c]!=Integer.MIN_VALUE){
            return dp[r][c];
        }
        else{
            return dp[r][c] = a[r][c] + Math.min(Math.min(recur(a,r-1,c,dp), recur(a,r,c-1,dp)), recur(a,r-1,c-1,dp));
        }
    }
}
